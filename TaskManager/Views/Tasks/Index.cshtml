@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager

@model PaginatedList<TaskManagerData.Models.Task>

@{
  ViewData["Title"] = "Index";
}

<h2>Tasks</h2>

<p>
  <a asp-action="Create">Create New</a>
</p>

<form asp-action="Index" method="get">
  <div class="form-actions no-color">
    <p>
      Find by name: <input type="text" name="SearchString" value="@ViewData["CurrentFilter"]" />
      <input type="submit" value="Search" class="btn btn-default" /> |
      <a asp-action="Index">Back to Full List</a>
    </p>
  </div>
</form>

<table class="table">
  <thead>
    <tr>
      <th>
        <a asp-action="Index" asp-route-sortOrder="@ViewData["TitleSortParam"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Title</a>
      </th>
      <th>
        <a asp-action="Index" asp-route-sortOrder="@ViewData["DescriptionSortParam"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Description</a>
      </th>
      <th>
        <a asp-action="Index" asp-route-sortOrder="@ViewData["PrioritySortParam"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Priority</a>
      </th>
      <th>
        <a asp-action="Index" asp-route-sortOrder="@ViewData["StatusSortParam"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Status</a>
      </th>

      <th></th>
    </tr>
  </thead>
  <tbody>
    @foreach (var item in Model)
    {
    <tr>
      <td>
        @Html.DisplayFor(modelItem => item.TskTitle)
      </td>
      <td>
        @Html.DisplayFor(modelItem => item.TskDescription)
      </td>
      <td>
        @Html.DisplayFor(modelItem => item.PriorityNavigation.PrtName)
      </td>
      <td>
        @Html.DisplayFor(modelItem => item.StatusNavigation.SttName)
      </td>
      <td>
        <a asp-action="Edit" asp-route-id="@item.TskId">Edit</a>
        @if (User.IsInRole("Admin"))
        {
          <span> | </span>
          <a asp-action="Delete" asp-route-id="@item.TskId">Delete</a>
        }
        @if (User.IsInRole("Admin") || User.IsInRole("Support"))
        {
          <span> | </span>
          <a asp-action="Done" asp-route-id="@item.TskId">Done</a>
        }
      </td>
    </tr>
    }
  </tbody>
</table>

@{
  var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
  var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}

<a asp-action="Index"
  asp-route-sortOrder="@ViewData["CurrentSort"]"
  asp-route-pageNumber="@(Model.PageIndex - 1)"
  asp-route-currentFilter="@ViewData["CurrentFilter"]"
  class="btn btn-default @prevDisabled">
  Previous
</a>
<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex + 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @nextDisabled">
  Next
</a>
