@using Microsoft.CodeAnalysis.CSharp.Syntax
@model TaskManagerData.Models.Task

@{
  ViewData["Title"] = "Create";
}

<h1>Create</h1>

<h4>Task</h4>
<hr />
<div class="row">
  <div class="col-md-4">
    <form asp-action="Create">
      <div asp-validation-summary="ModelOnly" class="text-danger"></div>
      <div class="form-group">
        <label asp-for="TskTitle" class="control-label"></label>
        <input asp-for="TskTitle" class="form-control" />
        <span asp-validation-for="TskTitle" class="text-danger"></span>
      </div>
      <div class="form-group">
        <label asp-for="TskDescription" class="control-label"></label>
        <input asp-for="TskDescription" class="form-control" />
        <span asp-validation-for="TskDescription" class="text-danger"></span>
      </div>
      <div class="form-group">
        <label asp-for="PriorityId" class="control-label"></label>
        <select asp-for="PriorityId" class="form-control" asp-items="ViewBag.PriorityId">
          <option value="">-- Select Priority --</option>
        </select>
        <span asp-validation-for="PriorityId" class="text-danger" />
      </div>
      @if (User.IsInRole("Admin") || User.IsInRole("Support"))
      {
        <div class="form-group">
          <label asp-for="StatusId" class="control-label"></label>
          <select asp-for="StatusId" class="form-control" asp-items="ViewBag.StatusId">
            <option value="">-- Select Status --</option>
          </select>
          <span asp-validation-for="StatusId" class="text-danger"/>
        </div>
      }
      else
      {
        <div class="form-group">
          <label asp-for="StatusId" class="control-label"></label> New
        </div>
      }
      <div class="form-group">
        <input type="submit" value="Create" class="btn btn-primary" />
      </div>
    </form>
  </div>
</div>

<div>
  <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
  @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
